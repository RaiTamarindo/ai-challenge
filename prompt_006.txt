Almost there, you are using a rubenv/sql-migrate docker image, but it seems to be a private one. Although there are plenty of public rubenv/sql-migrate images on dockerhub, I would like you go for a Dockerfile approach for security reasons: 1) create a Dockerfile with the sql-migrate target (it will be reused by api) that builds the backend/cmd/migrate/main.go file which uses the rubenv/sql-migrate library to run the migration (as you might noticed, you will need to initialize a Go package on the backend folder) 2) change the docker-compose.yaml file to use the sql-migrate target from the Dockerfile instead of the dockerhub image